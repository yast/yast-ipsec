/**
 * File:	include/ipsec/wizards.ycp
 * Package:	Configuration of ipsec
 * Summary:	Wizards definitions
 * Authors:	Ludwig Nussel <lnussel@suse.de>
 *
 * $Id$
 */

{

textdomain "ipsec";

import "Sequencer";
import "Wizard";

include "ipsec/complex.ycp";
include "ipsec/dialogs.ycp";
include "ipsec/certdialogs.ycp";


any ImportSequence();

/**
 * Add a configuration of ipsec
 * @return sequence result
 */
any AddSequence() {

    map aliases = $[
	"config1"	: [ ``(NewConnectionDialog()), true ],
	"askname"	: [ ``(AskConnectionNamePopup()), true ],
	"configl"	: ``(LeftConnectionConfigDialog()),
	"configr"	: ``(RightConnectionConfigDialog()),
	"config4"	: ``(ConnectionConfigEncryptionDialog()),
	"startmode"	: ``(ConnectionStartModeDialog()),
	"done"		: ``(ConnectionDoneDialog()),
	"importl"	: [ ``( ImportSequence() ), true ],
	"importr"	: [ ``( ImportSequence() ), true ],
	"roadwarrior"	: ``( EasyRoadWarriorDialog() ),
    ];

    map sequence = $[
	"ws_start" : "config1",
	"config1" : $[
	    `abort	: `abort,
	    `custom	: "askname",
	    `roadwarrior: "roadwarrior",
	],
	"askname" : $[
	    `abort	: `abort,
	    `next	: "configl",
	],
	"roadwarrior" : $[
	    `abort	: `abort,
	    `next	: "startmode",
	],
	"configl" : $[
	    `abort	: `abort,
	    `next	: "configr",
	    `import	: "importl"
	],
	"configr" : $[
	    `abort	: `abort,
	    `next	: "startmode",
	    `import	: "importr"
	],
	"config4" : $[
	    `abort	: `abort,
	    `next	: "startmode",
	],
	"startmode" : $[
	    `abort	: `abort,
	    `next	: "done",
	],
	"importl" : $[
	    `abort	: `abort,
	    `next	: "configl"
	],
	"importr" : $[
	    `abort	: `abort,
	    `next	: "configr"
	],
	"done" : $[
	    `abort	: `abort,
	    `next	: `next
	],
    ];

    return Sequencer::Run(aliases, sequence);
}

/**
 * Import Certificate Sequence
 * @return sequence result
 */
any ImportSequence() {

    map aliases = $[
	"config1"	: ``(CertificateImportDialog1()),
	"configfiles"	: ``(CertificateImportDialogFiles()),
	"configpkcs12"	: ``(CertificateImportDialogPKCS12()),
	"configzip"	: ``(CertificateImportDialogFiles()),
    ];

    map sequence = $[
	"ws_start" : "config1",
	"config1" : $[
	    `abort	: `abort,
	    `next	: `next,
	    `files	: "configfiles",
	    `pkcs12	: "configpkcs12",
	    `zip	: "configzip",
	],
	"configfiles" : $[
	    `abort	: `abort,
	    `next	: `next,
	],
	"configpkcs12" : $[
	    `abort	: `abort,
	    `next	: `next,
	],
	"configzip" : $[
	    `abort	: `abort,
	    `next	: `next,
	],
    ];

    return Sequencer::Run(aliases, sequence);
}

/**
 * Main workflow of the ipsec configuration
 * @return sequence result
 */
any MainSequence() {

    map aliases = $[
	"summary"	:   ``( SummaryDialog() ),
	"overview"	:   ``( OverviewDialog() ),
	"certificates"	:   ``( CertificateOverviewDialog()),
	"configure"	: [ ``( AddSequence() ), true ],
	"add"		: [ ``( AddSequence() ), true ],
	"edit"		: [ ``( AddSequence() ), true ],
	"settings"	: [ ``( FreeSWANSettingsDialog() ), true ],
	"import"	: [ ``( ImportSequence() )        , true ],
	"configE"	: [ ``( ConnectionExpertDialog() ), true ],
	"roadwarrior"	: [ ``( EasyRoadWarriorDialog() ) , true ],
    ];

    map sequence = $[
	"ws_start" : "summary",
	"summary" : $[
	    `abort	: `abort,
	    `next	: `next,
	    `overview	: "overview",
	    `configure	: "configure",
	    `other	: "configure",
	    `settings	: "settings",
	    `certificates	: "certificates",
	    `import	: "import",
	],
	"overview" : $[
	    `abort	: `abort,
	    `next	: "summary",
	    `add	: "add",
	    `edit	: "edit",
	    `expert	: "configE",
	    `roadwarrior : "roadwarrior",
	],
	"certificates" : $[
	    `abort	: `abort,
	    `next	: "summary",
	    `imp	: "import",
	],
	"configure" : $[
	    `abort	: `abort,
	    `next	: "summary",
	],
	"add" : $[
	    `abort	: `abort,
	    `next	: "overview",
	],
	"edit" : $[
	    `abort	: `abort,
	    `next	: "overview",
	],
	"settings" : $[
	    `abort	: `abort,
	    `next	: "summary",
	],
	"import" : $[
	    `abort	: `abort,
	    `next	: "certificates",
	],
	"configE" : $[
	    `abort	: `abort,
	    `next	: "overview",
	],
	"roadwarrior" : $[
	    `abort	: `abort,
	    `next	: "overview",
	    `needcert	: "import",
	],
    ];

    any ret = Sequencer::Run(aliases, sequence);

    return ret;
}

/**
 * Whole configuration of ipsec
 * @return sequence result
 */
any IPsecSequence() {

    map aliases = $[
	"read"	: [ ``( ReadDialog() ), true ],
	"main"	:   ``( MainSequence() ),
	"write"	: [ ``( WriteDialog() ), true ]
    ];

    map sequence = $[
	"ws_start" : "read",
	"read" : $[
	    `abort	: `abort,
	    `next	: "main"
	],
	"main" : $[
	    `abort	: `abort,
	    `next	: "write"
	],
	"write" : $[
	    `abort	: `abort,
	    `next	: `next
	]
    ];

    Wizard::CreateDialog();

    any ret = Sequencer::Run(aliases, sequence);

    UI::CloseDialog();
    return ret;
}

/**
 * Whole configuration of ipsec but without reading and writing.
 * For use with autoinstallation.
 * @return sequence result
 */
any IPsecAutoSequence() {

    /* Initialization dialog caption */
    string caption = _("IPsec Configuration");
    /* Initialization dialog contents */
    term contents = `Label(_("Initializing..."));

    Wizard::CreateDialog();
    Wizard::SetContentsButtons(caption, contents, "",
	    Label::BackButton(), Label::NextButton());

    any ret = MainSequence();

    UI::CloseDialog();
    return ret;
}

/* EOF */
}
