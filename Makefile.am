# Emacs: -*- makefile -*-
#
# Toplevel Makefile.am for a YaST2 subproject
#
# -- This file is generated by y2automake - DO NOT EDIT! --
#    (Edit ./SUBDIRS instead)
#

PREFIX			= /usr

VERSION			= $(shell cat $(srcdir)/VERSION)
RPMNAME 		= $(shell cat $(srcdir)/RPMNAME)
SUBDIRS_FILE		= $(shell test -e $(srcdir)/SUBDIRS      && echo SUBDIRS)
Y2TEXTDOMAIN_FILE	= $(shell test -e $(srcdir)/Y2TEXTDOMAIN && echo Y2TEXTDOMAIN)
ACINCLUDE_FILE		= $(shell test -e $(srcdir)/acinclude.m4 && echo acinclude.m4)
HAS_GPL_LICENSE		= $(shell test -e $(srcdir)/GPL && echo GPL)

# we can specify additional files to .pot creation
POTFILES_FILE		= $(shell test -e $(srcdir)/POTFILES     && echo POTFILES)
POTFILES		= $(shell test -e $(srcdir)/POTFILES     && sed 's,^,$(srcdir)/,' < $(srcdir)/POTFILES)

# do we do Makefile.am for devtools? It is a little special...
IS_DEVTOOLS		= $(findstring yast2-devtools,$(RPMNAME))

DEVTOOLS_DIR 		= $(if $(IS_DEVTOOLS),$(srcdir)/devtools,$(PREFIX)/share/YaST2/data/devtools)
ALL_PACKAGES		= $(DEVTOOLS_DIR)/admin/all-packages
LEGALESE_DIR		= $(if $(HAS_GPL_LICENSE),$(DEVTOOLS_DIR)/admin/copyright/gpl,$(DEVTOOLS_DIR)/admin/copyright/yast)

COPYRIGHT_files_gpl	= GPL README COPYING COPYRIGHT.english

COPYRIGHT_files_yast	= README COPYING COPYRIGHT.english \
			  COPYRIGHT.french COPYRIGHT.german COPYRIGHT.spanish

extra_COPYRIGHT_files =  $(if $(HAS_GPL_LICENSE), $(COPYRIGHT_files_gpl), $(COPYRIGHT_files_yast))

AUTOMAKE_OPTIONS = foreign dist-bzip2

Makefile.am.common: $(DEVTOOLS_DIR)/admin/Makefile.am.common
	cmp -s $< $@ || cp -f $< $@

# create bzip2ed tar and make some sanity checks
$(RPMNAME)-$(VERSION).tar.bz2: checkpo dist-bzip2
	@if [ `bunzip2 -c $(RPMNAME)-$(VERSION).tar.bz2 | wc --bytes` = 0 ] ; then \
	    echo "Error: created tar is empty" ; \
	    exit 1 ; \
	fi

CLEANFILES =
MAINTAINERCLEANFILES = package/$(RPMNAME)-$(VERSION).tar.bz2 package/$(RPMNAME).spec

# all the .ycp and .y2cc files, we should separate texts from (exclude testsuite directory)
POT_SRC = $(shell find $(srcdir) -type d -name testsuite -prune , \
	-type f -name "*.ycp" -o -name "*.pm" | xargs grep -l '^[[:space:]]*[Tt]extdomain') \
	$(POTFILES)

# all the textdomains for .pot creation
POT_DOMAINS = \
	$(shell \
	    PSRC="$(POT_SRC)" ; \
	    if [ "$$PSRC" ] ; \
	    then \
		DOMAINS="" ; \
		for F in $$PSRC ; \
		do \
		    D="`grep '^[[:space:]]*[Tt]extdomain' $$F | head -n 1 | \
		       sed 's/^[[:space:]]*[Tt]extdomain[[:space:]]*[="(]*[[:space:]]*\([-_a-zA-Z0-9]*\).*/\1'/`" ; \
		    DOMAINS="$$D\n$$DOMAINS" ; \
		done ; \
		echo -en $$DOMAINS | sort | uniq ; \
	    fi ; : \) \
	)

# the names of the actual .pot files
POT_DST = $(addprefix $(srcdir)/,$(addsuffix .pot,$(POT_DOMAINS)))

EXTRA_DIST = \
	VERSION RPMNAME MAINTAINER configure.in.in		\
	$(SUBDIRS_FILE) $(ACINCLUDE_FILE)			\
	$(Y2TEXTDOMAIN_FILE) $(POTFILES_FILE)			\
	$(if $(IS_DEVTOOLS),Makefile.am.common,$(POT_DST))

show-extra-dist:
	@echo $(EXTRA_DIST)

dist-hook:
	@for I in $(extra_COPYRIGHT_files) ;					\
	do									\
	    EX="" ;								\
	    if test -f $(srcdir)/$$I ; then					\
		EX=$(srcdir)/$$I ;						\
	    elif test -f $(LEGALESE_DIR)/$$I ; then				\
		EX=$(LEGALESE_DIR)/$$I ;					\
	    else								\
	        echo "Error: No file $$I in $(srcdir)/ or in $$LEGALESE_DIR/";	\
		exit 1 ;							\
	    fi ;								\
	    echo "cp $$EX $(distdir)" ;						\
	    cp $$EX "$(distdir)" ;						\
	done

xgettext_call = \
	echo "Creating $(srcdir)/$$MODULE.pot from $$FILES..." ;		\
	$(XGETTEXT) --no-wrap --add-comments --add-location --keyword=_:1,2	\
		--foreign-user --copyright-holder="SuSE Linux AG, Nuernberg"	\
		--default-domain=$$MODULE --output=$$MODULE.pot $$FILES

# we need a "dummy" pot target for the case, when $(POT_DST) is empty
$(POT_DST) pot: $(POT_SRC)
	@DOMAINS="" ; \
	for F in $^ ; \
	do \
	    D=`grep '^[[:space:]]*[Tt]extdomain' $$F | head -n 1 | \
	       sed 's/^[[:space:]]*[Tt]extdomain[[:space:]]*[="(]*[[:space:]]*\([-_a-zA-Z0-9]*\).*/\1'/` ; \
	    if [ -z $$D ] ; \
	    then \
		echo "Error: empty textdomain in $$F" ; \
		exit 1 ; \
	    fi ; \
	    DOMAINS="$$D:$$F\n$$DOMAINS" ; \
	done ; \
	DOMAINS=`echo -en $$DOMAINS | sort` ; \
	MODULE=$${DOMAINS%%:*} ; \
	FILES="" ; \
	for I in $$DOMAINS ; \
	do \
	    D=$${I%%:*} ; \
	    F=$${I#*:} ; \
	    if [ "$$D" != "$$MODULE" ] ; \
	    then \
		$(xgettext_call) ; \
		MODULE=$$D ; \
		FILES=$$F ; \
	    else \
		FILES="$$FILES $$F" ; \
	    fi ; \
	done ; \
	$(xgettext_call)

install-pot: $(POT_DST)
	@if [ -n "$^" ] ; then \
	    echo "mkdir -p $(DESTDIR)$(potdir)" ; \
	    mkdir -p $(DESTDIR)$(potdir) ; \
	    list="$^"; \
	    for I in $$list ; \
	    do \
		echo "$(INSTALL_DATA) $$I $(DESTDIR)$(potdir)" ; \
		$(INSTALL_DATA) $$I $(DESTDIR)$(potdir) ; \
	    done ; \
	fi

# all-local: $(if $(IS_DEVTOOLS),,$(POT_DST))

install-data-local: # $(if $(IS_DEVTOOLS),,install-pot)
	mkdir -p $(DESTDIR)$(docdir)
	@for I in $(extra_COPYRIGHT_files) ;					\
	do									\
	    EX="" ;								\
	    if test -f $(srcdir)/$$I ; then					\
		EX=$(srcdir)/$$I ;						\
	    elif test -f $(LEGALESE_DIR)/$$I ; then				\
		EX=$(LEGALESE_DIR)/$$I ;					\
	    else								\
		echo "Error: No file $$I in $(srcdir)/ or in $(LEGALESE_DIR)/";	\
		exit 1 ;							\
	    fi ;								\
	    echo "$(INSTALL_DATA) $$EX $(DESTDIR)$(docdir)" ;			\
	    $(INSTALL_DATA) $$EX $(DESTDIR)$(docdir) ;				\
	done

package-local: check-parse $(if $(IS_DEVTOOLS),,$(POT_DST)) $(RPMNAME)-$(VERSION).tar.bz2
	rm -f package/$(RPMNAME)-*.tar.bz2
	rm -f package/*~
	rm -f package/*.bak
	rm -f package/*.auto
	mv $(RPMNAME)-$(VERSION).tar.bz2 package/
	if ! test -x $(PREFIX)/bin/y2tool; then \
	    echo "$(PREFIX)/bin/y2tool: not found."; \
	    echo "You have to install yast2-devtools to making a package"; \
	    false; \
	fi
	here=`pwd`; \
	cd $(srcdir) && for i in $(RPMNAME)*.spec.in; do \
	    newname="`echo "$$i" | sed "s/\.in$$//g"`"; \
	    $(PREFIX)/bin/y2tool create-spec < $$i > $$here/package/$${newname} ; \
	done

package: check-cvs-up-to-date check-tagversion check-all-packages package-local

TAGVERSION	 = $(PREFIX)/bin/y2tool tagversion
CHECKIN_BASE_DIR = /work/src/done

check-cvs-up-to-date:
	cd $(srcdir) && ! cvs -q -n up 2>/dev/null | grep '^[MCAR] '

check-tagversion:
	@cd $(srcdir) && cvs status -v VERSION | grep -w `$(TAGVERSION) -n` >/dev/null || ( echo "ERROR: Please run 'tagversion' first"; false )

check-parse-old:
	@if [ `find -type f -name "*.ycp" | wc -l` -gt 0 -a "$(RPMNAME)" != "yast2-core" ] ; then \
		echo "Running parseycp..." ; \
		parseycp -q -R ; \
	else \
		echo "Not running parseycp." ; \
	fi

check-parse:
	@echo "Not running parseycp."

check-all-packages:
	@if [ ! -e "$(ALL_PACKAGES)" ]; then				\
		echo ERROR: "Can't find $(ALL_PACKAGES)"; false;	\
	fi
	@if ! grep -q "^$(RPMNAME)	" $(ALL_PACKAGES); then		\
		echo ERROR: "$(RPMNAME) not in $(ALL_PACKAGES)"; false;	\
	fi
	@if grep -q "^$(RPMNAME)	.*?" $(ALL_PACKAGES); then	\
		echo ERROR: "$(RPMNAME) info in $(ALL_PACKAGES) contains some unknown (?) fields:";	\
		echo;							\
		grep "^$(RPMNAME)	.*?" $(ALL_PACKAGES);		\
		echo;							\
		false;							\
	fi

stable: checkin-stable

checkin-stable: package
	$(PREFIX)/bin/y2tool checkin-stable


# For po/ modules
checkpo:
	test ! -e $(srcdir)/Y2TEXTDOMAIN \
	  || { $(MAKE) -C po checkpo && $(MAKE) -C po make-pox; }
# No ./SUBDIRS file found - assuming default: All direct subdirs with Makefile.am
SUBDIRS = agents doc src testsuite 
